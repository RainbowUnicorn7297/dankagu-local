# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from takasho.schema.common_featureset.player_api import baas_product_pb2 as takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2


class BaasProductStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAvailableByIDsV1 = channel.unary_unary(
                '/takasho.schema.common_featureset.player_api.BaasProduct/GetAvailableByIDsV1',
                request_serializer=takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Request.SerializeToString,
                response_deserializer=takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Response.FromString,
                )


class BaasProductServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAvailableByIDsV1(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BaasProductServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAvailableByIDsV1': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAvailableByIDsV1,
                    request_deserializer=takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Request.FromString,
                    response_serializer=takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'takasho.schema.common_featureset.player_api.BaasProduct', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BaasProduct(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAvailableByIDsV1(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/takasho.schema.common_featureset.player_api.BaasProduct/GetAvailableByIDsV1',
            takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Request.SerializeToString,
            takasho_dot_schema_dot_common__featureset_dot_player__api_dot_baas__product__pb2.BaasProductGetAvailableByIDsV1.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
